const db = require('./src/database/connection');

async function corrigirCodigosEmpresas() {
    try {
        console.log('üîß Corrigindo c√≥digos das empresas no banco de dados...');

        // Mapeamento dos c√≥digos incorretos para os corretos
        const correcoes = [
            { codigoAtual: '2634', codigoCorreto: '2112', nome: 'Tap Tap Perdizes' },
            { codigoAtual: '2635', codigoCorreto: '810', nome: 'Inventcloud Tecnologia' }
        ];

        for (const correcao of correcoes) {
            console.log(`\nüìù Corrigindo empresa "${correcao.nome}":`);
            console.log(`   C√≥digo atual: ${correcao.codigoAtual}`);
            console.log(`   C√≥digo correto: ${correcao.codigoCorreto}`);

            // Verificar se a empresa com c√≥digo incorreto existe
            const empresaExistente = await db.get(
                'SELECT id, codigo, nome FROM companies WHERE codigo = ? AND active = 1',
                [correcao.codigoAtual]
            );

            if (empresaExistente) {
                console.log(`   ‚úÖ Empresa encontrada: ${empresaExistente.nome}`);

                // Verificar se j√° existe empresa com o c√≥digo correto
                const empresaCorreta = await db.get(
                    'SELECT id, codigo, nome FROM companies WHERE codigo = ? AND active = 1',
                    [correcao.codigoCorreto]
                );

                if (empresaCorreta) {
                    console.log(`   ‚ö†Ô∏è  J√° existe empresa com c√≥digo correto: ${empresaCorreta.nome}`);
                    console.log(`   üîÑ Desativando empresa com c√≥digo incorreto...`);

                    // Desativar a empresa com c√≥digo incorreto
                    await db.run(
                        'UPDATE companies SET active = 0, updated_at = CURRENT_TIMESTAMP WHERE id = ?',
                        [empresaExistente.id]
                    );

                    console.log(`   ‚úÖ Empresa com c√≥digo incorreto desativada`);
                } else {
                    console.log(`   üîÑ Atualizando c√≥digo da empresa...`);

                    // Atualizar o c√≥digo da empresa
                    await db.run(
                        'UPDATE companies SET codigo = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?',
                        [correcao.codigoCorreto, empresaExistente.id]
                    );

                    console.log(`   ‚úÖ C√≥digo atualizado com sucesso`);
                }
            } else {
                console.log(`   ‚ùå Empresa com c√≥digo ${correcao.codigoAtual} n√£o encontrada`);
            }
        }

        console.log('\nüîç Verificando corre√ß√µes:');

        // Verificar se as corre√ß√µes foram aplicadas
        for (const correcao of correcoes) {
            const empresaCorrigida = await db.get(
                'SELECT id, codigo, nome FROM companies WHERE codigo = ? AND active = 1',
                [correcao.codigoCorreto]
            );

            if (empresaCorrigida) {
                console.log(`   ‚úÖ ${correcao.nome}: C√≥digo ${empresaCorrigida.codigo} - OK`);
            } else {
                console.log(`   ‚ùå ${correcao.nome}: C√≥digo ${correcao.codigoCorreto} - N√ÉO ENCONTRADO`);
            }
        }

        console.log('\nüéâ Corre√ß√£o conclu√≠da!');

    } catch (error) {
        console.error('‚ùå Erro durante corre√ß√£o:', error);
    } finally {
        await db.close();
    }
}

corrigirCodigosEmpresas();